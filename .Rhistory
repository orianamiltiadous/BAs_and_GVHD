

all_gsea_results$NES = as.double(all_gsea_results$NES)
# convert FDR to -log10
all_gsea_results$`-10log(FDR q-val)` = -log(as.double(all_gsea_results$`FDR q-val`)+0.00001,10)
# plot GSEA results in a dotplot facet by cell type and treatment
ggdotchart(all_gsea_results[(all_gsea_results$`FDR q-val`<=0.05) ,], 'GS PATHWAY', 'NES', shape=19,  sorting = "ascending",
add = "segments", color= 'NES',  rotate=TRUE, dot.size='-10log(FDR q-val)',
ggtheme = theme_pubr()) + facet_grid(CELLTYPE~TREATMENT) +
scale_colour_gradientn(colours = dichromat::colorschemes$DarkRedtoBlue.12) +
geom_hline(yintercept = 0, linetype = 2, color = "lightgray") + ylim(-3,3) + font("xy.text", size=11)
setwd("/Volumes/Macintosh HD/Users/miltiado/Documents/BA/Anastasia/gsea/")
# store gsea file paths
gsea_result_files <- list.files(recursive = TRUE, pattern = "^gsea_report(.*)tsv$")
# create annotation fields
celltype_annotation = rep(c("CD4", "CD4", "CD8", "CD8","Treg", "Treg"),4)
treatment_annotation= c(rep("CDCA",6),  rep("UDCA",6), rep("GW4064",6),  rep("DY268",6))
# initiate counter
i=1
# create empty tibble to store the GSEA data
all_gsea_results = tibble("GS PATHWAY"=factor(), "GS DETAILS"=integer(), "SIZE"=double(), "ES"=double(), "NES"=double(), "NOM p-val"=double(), "FDR q-val"=double(), "FWER p-val"=double(), "RANK"=integer(), "LEADING EDGE"=factor(), "CELLTYPE" = factor(), "TREATMENT" = factor())
# fill in tibble with all GSEA results
for (path in gsea_result_files){
gsea_results = tibble(read.table(path, sep="\t", row.names = 1, skip = 1))
colnames(gsea_results) = c("GS PATHWAY", "GS DETAILS", "SIZE", "ES", "NES", "NOM p-val", "FDR q-val", "FWER p-val", "RANK", "LEADING EDGE", "CELLTYPE", "TREATMENT")
gsea_results$CELLTYPE = rep(as.factor(celltype_annotation[i]), nrow(gsea_results))
gsea_results$TREATMENT = rep(as.factor(treatment_annotation[i]), nrow(gsea_results))
all_gsea_results = rbind(all_gsea_results, gsea_results)
i=i+1
}
# remove "---" rows
all_gsea_results = all_gsea_results[all_gsea_results$NES!="---",]
# convert NES to double
all_gsea_results$NES = as.double(all_gsea_results$NES)
# convert FDR to -log10
all_gsea_results$`-10log(FDR q-val)` = -log(as.double(all_gsea_results$`FDR q-val`)+0.00001,10)
# plot GSEA results in a dotplot facet by cell type and treatment
ggdotchart(all_gsea_results[(all_gsea_results$`FDR q-val`<=0.05) ,], 'GS PATHWAY', 'NES', shape=19,  sorting = "ascending",
add = "segments", color= 'NES',  rotate=TRUE, dot.size='-10log(FDR q-val)',
ggtheme = theme_pubr()) + facet_grid(CELLTYPE~TREATMENT) +
scale_colour_gradientn(colours = dichromat::colorschemes$DarkRedtoBlue.12) +
geom_hline(yintercept = 0, linetype = 2, color = "lightgray") + ylim(-3,3) + font("xy.text", size=11)
View(all_gsea_results)
# remove "---" rows
all_gsea_results = all_gsea_results[all_gsea_results$NES!="---",]
# convert NES to double
all_gsea_results$NES = as.double(all_gsea_results$NES)
# convert FDR to -log10
all_gsea_results$`-10log(FDR q-val)` = -log(as.double(all_gsea_results$`FDR q-val`)+0.00001,10)
all_gsea_results
# convert FDR to -log10
all_gsea_results$`-10log(FDR q-val)` = as.double(-log(all_gsea_results$`FDR q-val`)+0.00001,10)
glimpse(all_gsea_results)
# plot GSEA results in a dotplot facet by cell type and treatment
ggdotchart(all_gsea_results[(all_gsea_results$`FDR q-val`<=0.05) ,], 'GS PATHWAY',  shape=19,  sorting = "ascending",
add = "segments", color= 'NES',  rotate=TRUE, dot.size='-10log(FDR q-val)',
ggtheme = theme_pubr()) + facet_grid(CELLTYPE~TREATMENT) +
scale_colour_gradientn(colours = dichromat::colorschemes$DarkRedtoBlue.12) +
geom_hline(yintercept = 0, linetype = 2, color = "lightgray") + ylim(-3,3) + font("xy.text", size=11)
# plot GSEA results in a dotplot facet by cell type and treatment
ggdotchart(all_gsea_results[(all_gsea_results$`FDR q-val`<=0.05) ,], 'GS PATHWAY', 'NES', shape=19,  sorting = "ascending",
add = "segments", color= 'NES',  rotate=TRUE, dot.size='-10log(FDR q-val)',
ggtheme = theme_pubr()) + facet_grid(CELLTYPE~TREATMENT) +
#scale_colour_gradientn(colours = dichromat::colorschemes$DarkRedtoBlue.12) +
geom_hline(yintercept = 0, linetype = 2, color = "lightgray") + ylim(-3,3) + font("xy.text", size=11)
all_gsea_results
View(all_gsea_results)
# plot GSEA results in a dotplot facet by cell type and treatment
ggdotchart(all_gsea_results[(all_gsea_results$`FDR q-val`<=0.05) ,], 'GS PATHWAY', 'NES', shape=19) #sorting = "ascending",
# plot GSEA results in a dotplot facet by cell type and treatment
ggdotchart(all_gsea_results[(all_gsea_results$`FDR q-val`<=0.05) ,], 'GS PATHWAY', 'NES', shape=19,  sorting = "ascending",
add = "segments",  rotate=TRUE, dot.size='-10log(FDR q-val)',
ggtheme = theme_pubr()) + facet_grid(CELLTYPE~TREATMENT) +
#scale_colour_gradientn(colours = dichromat::colorschemes$DarkRedtoBlue.12) +
geom_hline(yintercept = 0, linetype = 2, color = "lightgray") + ylim(-3,3) + font("xy.text", size=11)
# plot GSEA results in a dotplot facet by cell type and treatment
ggdotchart(all_gsea_results[(all_gsea_results$`FDR q-val`<=0.05) ,], 'GS PATHWAY', 'NES', shape=19,  sorting = "ascending",
add = "segments", color= 'NES',  rotate=TRUE, #dot.size='-10log(FDR q-val)',
ggtheme = theme_pubr()) + facet_grid(CELLTYPE~TREATMENT) +
#scale_colour_gradientn(colours = dichromat::colorschemes$DarkRedtoBlue.12) +
geom_hline(yintercept = 0, linetype = 2, color = "lightgray") + ylim(-3,3) + font("xy.text", size=11)
# plot GSEA results in a dotplot facet by cell type and treatment
ggdotchart(all_gsea_results[(all_gsea_results$`FDR q-val`<=0.05) ,], 'GS PATHWAY', 'NES', shape=19,  sorting = "ascending",
add = "segments", color= 'NES',  rotate=TRUE, #dot.size='-10log(FDR q-val)',
ggtheme = theme_pubr()) + facet_grid(CELLTYPE~TREATMENT) +
scale_colour_gradientn(colours = dichromat::colorschemes$DarkRedtoBlue.12) +
geom_hline(yintercept = 0, linetype = 2, color = "lightgray") + ylim(-3,3) + font("xy.text", size=11)
# plot GSEA results in a dotplot facet by cell type and treatment
ggdotchart(all_gsea_results[(all_gsea_results$`FDR q-val`<=0.05) ,], 'GS PATHWAY', 'NES', shape=19,  sorting = "ascending",
add = "segments", color= 'NES',  rotate=TRUE, dot.size=`-10log(FDR q-val)`,
ggtheme = theme_pubr()) + facet_grid(CELLTYPE~TREATMENT) +
scale_colour_gradientn(colours = dichromat::colorschemes$DarkRedtoBlue.12) +
geom_hline(yintercept = 0, linetype = 2, color = "lightgray") + ylim(-3,3) + font("xy.text", size=11)
# plot GSEA results in a dotplot facet by cell type and treatment
ggdotchart(all_gsea_results[(all_gsea_results$`FDR q-val`<=0.05) ,], 'GS PATHWAY', 'NES', shape=19,  sorting = "ascending",
add = "segments", color= 'NES',  rotate=TRUE, dot.size=all_gsea_results$`-10log(FDR q-val)`, ggtheme = theme_pubr()) + facet_grid(CELLTYPE~TREATMENT) +
scale_colour_gradientn(colours = dichromat::colorschemes$DarkRedtoBlue.12) +
geom_hline(yintercept = 0, linetype = 2, color = "lightgray") + ylim(-3,3) + font("xy.text", size=11)
all_gsea_results$`neg10log(FDR q-val)` = all_gsea_results$`-10log(FDR q-val)`
# plot GSEA results in a dotplot facet by cell type and treatment
ggdotchart(all_gsea_results[(all_gsea_results$`FDR q-val`<=0.05) ,], 'GS PATHWAY', 'NES', shape=19,  sorting = "ascending",
add = "segments", color= 'NES',  rotate=TRUE, dot.size='neg10log(FDR q-val)',
ggtheme = theme_pubr()) + facet_grid(CELLTYPE~TREATMENT) +
scale_colour_gradientn(colours = dichromat::colorschemes$DarkRedtoBlue.12) +
geom_hline(yintercept = 0, linetype = 2, color = "lightgray") + ylim(-3,3) + font("xy.text", size=11)
all_gsea_results$trFDR = all_gsea_results$`-10log(FDR q-val)`
# plot GSEA results in a dotplot facet by cell type and treatment
ggdotchart(all_gsea_results[(all_gsea_results$`FDR q-val`<=0.05) ,], 'GS PATHWAY', 'NES', shape=19,  sorting = "ascending",
add = "segments", color= 'NES',  rotate=TRUE, dot.size='trFDR',
ggtheme = theme_pubr()) + facet_grid(CELLTYPE~TREATMENT) +
scale_colour_gradientn(colours = dichromat::colorschemes$DarkRedtoBlue.12) +
geom_hline(yintercept = 0, linetype = 2, color = "lightgray") + ylim(-3,3) + font("xy.text", size=11)
# load required packages
library(biomaRt)
install.packages("cli")
# load required packages
library(biomaRt)
remove.packages("cli")
# load required packages
library(biomaRt)
install.packages("cli")
# load required packages
library(biomaRt)
install.packages("png")
install.packages("/Volumes/Macintosh HD/Users/miltiado/Downloads/png_0.1-8.tar.gz", repos = NULL, type="source")
renv::install("ggpubr", force=T)
#install required packages
# if (!requireNamespace("BiocManager", quietly = TRUE))
#  install.packages("BiocManager")
# renv::install("bioc::BiocManager", force=T)
# if (!require("BiocManager", quietly = TRUE))
#     install.packages("BiocManager")
BiocManager::install("biomaRt@2.54.0", force=T)
# load required packages
library(biomaRt)
install.packages("/Volumes/Macintosh HD/Users/miltiado/Downloads/png_0.1-8.tar.gz", repos = NULL, type="source")
# load required packages
library(biomaRt)
getwd()
#install required packages
# if (!requireNamespace("BiocManager", quietly = TRUE))
#  install.packages("BiocManager")
# renv::install("bioc::BiocManager", force=T)
# if (!require("BiocManager", quietly = TRUE))
#     install.packages("BiocManager")
BiocManager::install("biomaRt", force=T)
#install required packages
# if (!requireNamespace("BiocManager", quietly = TRUE))
#  install.packages("BiocManager")
# renv::install("bioc::BiocManager", force=T)
# if (!require("BiocManager", quietly = TRUE))
#     install.packages("BiocManager")
BiocManager::install("biomaRt", force=T)
# renv::install("bioc::edgeR", force=T)
#
#renv::install("tibble@3.1.8", fo
# renv::install("bioc::edgeR", force=T)
renv::install("bioc::png", force=T)
# load required packages
library(biomaRt)
# load required packages
,
library(biomaRt)
library(edgeR)
library(tibble)
library(ggpubr)
library(pheatmap)
library(dichromat)
library(grid)
library(patchwork)
library(BiocManager)
library(stats)
library(readxl)
library(dplyr)
setwd("/Volumes/Macintosh HD/Users/miltiado/Documents/BA/Anastasia/gsea/")
# store gsea file paths
gsea_result_files <- list.files(recursive = TRUE, pattern = "^gsea_report(.*)tsv$")
# store gsea file paths
gsea_result_files <- list.files(recursive = TRUE, pattern = "^gsea_report(.*)tsv$")
# create annotation fields
celltype_annotation = rep(c("CD4", "CD4", "CD8", "CD8","Treg", "Treg"),4)
treatment_annotation= c(rep("CDCA",6),  rep("UDCA",6), rep("GW4064",6),  rep("DY268",6))
treatment_annotation= c(rep("CDCA",6),  rep("UDCA",6), rep("GW4064",6),  rep("DY268",6))
# initiate counter
i=1
# create annotation fields
celltype_annotation = rep(c("CD4", "CD4", "CD8", "CD8","Treg", "Treg"),4)
treatment_annotation= c(rep("CDCA",6),  rep("UDCA",6), rep("GW4064",6),  rep("DY268",6))
# initiate counter
i=1
# create empty tibble to store the GSEA data
all_gsea_results = tibble("GS PATHWAY"=factor(), "GS DETAILS"=integer(), "SIZE"=double(), "ES"=double(), "NES"=double(), "NOM p-val"=double(), "FDR q-val"=double(), "FWER p-val"=double(), "RANK"=integer(), "LEADING EDGE"=factor(), "CELLTYPE" = factor(), "TREATMENT" = factor())
# fill in tibble with all GSEA results
for (path in gsea_result_files){
gsea_results = tibble(read.table(path, sep="\t", row.names = 1, skip = 1))
colnames(gsea_results) = c("GS PATHWAY", "GS DETAILS", "SIZE", "ES", "NES", "NOM p-val", "FDR q-val", "FWER p-val", "RANK", "LEADING EDGE", "CELLTYPE", "TREATMENT")
gsea_results$CELLTYPE = rep(as.factor(celltype_annotation[i]), nrow(gsea_results))
gsea_results$TREATMENT = rep(as.factor(treatment_annotation[i]), nrow(gsea_results))
all_gsea_results = rbind(all_gsea_results, gsea_results)
i=i+1
}
# remove "---" rows
all_gsea_results = all_gsea_results[all_gsea_results$NES!="---",]
# convert NES to double
all_gsea_results$NES = as.double(all_gsea_results$NES)
# convert FDR to -log10
all_gsea_results$`-10log(FDR q-val)` = -log(as.double(all_gsea_results$`FDR q-val`)+0.00001,10)
all_gsea_results$trFDR = all_gsea_results$`-10log(FDR q-val)`
# plot GSEA results in a dotplot facet by cell type and treatment
ggdotchart(all_gsea_results[(all_gsea_results$`FDR q-val`<=0.05) ,], 'GS PATHWAY', 'NES', shape=19,  sorting = "ascending",
add = "segments", color= 'NES',  rotate=TRUE, dot.size='trFDR',
ggtheme = theme_pubr()) + facet_grid(CELLTYPE~TREATMENT) +
scale_colour_gradientn(colours = dichromat::colorschemes$DarkRedtoBlue.12) +
geom_hline(yintercept = 0, linetype = 2, color = "lightgray") + ylim(-3,3) + font("xy.text", size=11)
setwd("/Volumes/Macintosh HD/Users/miltiado/Documents/BA/Anastasia/gsea/")
# store gsea file paths
gsea_result_files <- list.files(recursive = TRUE, pattern = "^gsea_report(.*)tsv$")
# create annotation fields
celltype_annotation = rep(c("CD4", "CD4", "CD8", "CD8","Treg", "Treg"),4)
treatment_annotation= c(rep("CDCA",6),  rep("UDCA",6), rep("GW4064",6),  rep("DY268",6))
# initiate counter
i=1
# create empty tibble to store the GSEA data
all_gsea_results = tibble("GS PATHWAY"=factor(), "GS DETAILS"=integer(), "SIZE"=double(), "ES"=double(), "NES"=double(), "NOM p-val"=double(), "FDR q-val"=double(), "FWER p-val"=double(), "RANK"=integer(), "LEADING EDGE"=factor(), "CELLTYPE" = factor(), "TREATMENT" = factor())
# fill in tibble with all GSEA results
for (path in gsea_result_files){
gsea_results = tibble(read.table(path, sep="\t", row.names = 1, skip = 1))
colnames(gsea_results) = c("GS PATHWAY", "GS DETAILS", "SIZE", "ES", "NES", "NOM p-val", "FDR q-val", "FWER p-val", "RANK", "LEADING EDGE", "CELLTYPE", "TREATMENT")
gsea_results$CELLTYPE = rep(as.factor(celltype_annotation[i]), nrow(gsea_results))
gsea_results$TREATMENT = rep(as.factor(treatment_annotation[i]), nrow(gsea_results))
all_gsea_results = rbind(all_gsea_results, gsea_results)
i=i+1
}
# remove "---" rows
all_gsea_results = all_gsea_results[all_gsea_results$NES!="---",]
# fill in tibble with all GSEA results
for (path in gsea_result_files){
gsea_results = tibble(read.table(path, sep="\t", row.names = 1, skip = 1))
colnames(gsea_results) = c("GS PATHWAY", "GS DETAILS", "SIZE", "ES", "NES", "NOM p-val", "FDR q-val", "FWER p-val", "RANK", "LEADING EDGE", "CELLTYPE", "TREATMENT")
gsea_results$CELLTYPE = rep(as.factor(celltype_annotation[i]), nrow(gsea_results))
gsea_results$TREATMENT = rep(as.factor(treatment_annotation[i]), nrow(gsea_results))
all_gsea_results = rbind(all_gsea_results, gsea_results)
i=i+1
}
setwd("/Volumes/Macintosh HD/Users/miltiado/Documents/BA/Anastasia/gsea/")
# store gsea file paths
gsea_result_files <- list.files(recursive = TRUE, pattern = "^gsea_report(.*)tsv$")
# create annotation fields
celltype_annotation = rep(c("CD4", "CD4", "CD8", "CD8","Treg", "Treg"),4)
# load required packages
library(biomaRt)
library(edgeR)
library(tibble)
library(ggpubr)
library(pheatmap)
library(dichromat)
library(grid)
library(patchwork)
library(BiocManager)
library(stats)
library(readxl)
library(dplyr)
setwd("/Volumes/Macintosh HD/Users/miltiado/Documents/BA/Anastasia/gsea/")
# store gsea file paths
gsea_result_files <- list.files(recursive = TRUE, pattern = "^gsea_report(.*)tsv$")
setwd("/Volumes/Macintosh HD/Users/miltiado/Documents/BA/Anastasia/gsea/")
# store gsea file paths
gsea_result_files <- list.files(recursive = TRUE, pattern = "^gsea_report(.*)tsv$")
# store gsea file paths
gsea_result_files <- list.files(recursive = TRUE, pattern = "^gsea_report(.*)tsv$")
# create annotation fields
celltype_annotation = rep(c("CD4", "CD4", "CD8", "CD8","Treg", "Treg"),4)
# create annotation fields
celltype_annotation = rep(c("CD4", "CD4", "CD8", "CD8","Treg", "Treg"),4)
treatment_annotation= c(rep("CDCA",6),  rep("UDCA",6), rep("GW4064",6),  rep("DY268",6))
# create annotation fields
celltype_annotation = rep(c("CD4", "CD4", "CD8", "CD8","Treg", "Treg"),4)
treatment_annotation= c(rep("CDCA",6),  rep("UDCA",6), rep("GW4064",6),  rep("DY268",6))
# initiate counter
i=1
# create empty tibble to store the GSEA data
all_gsea_results = tibble("GS PATHWAY"=factor(), "GS DETAILS"=integer(), "SIZE"=double(), "ES"=double(), "NES"=double(), "NOM p-val"=double(), "FDR q-val"=double(), "FWER p-val"=double(), "RANK"=integer(), "LEADING EDGE"=factor(), "CELLTYPE" = factor(), "TREATMENT" = factor())
# fill in tibble with all GSEA results
for (path in gsea_result_files){
gsea_results = tibble(read.table(path, sep="\t", row.names = 1, skip = 1))
colnames(gsea_results) = c("GS PATHWAY", "GS DETAILS", "SIZE", "ES", "NES", "NOM p-val", "FDR q-val", "FWER p-val", "RANK", "LEADING EDGE", "CELLTYPE", "TREATMENT")
gsea_results$CELLTYPE = rep(as.factor(celltype_annotation[i]), nrow(gsea_results))
gsea_results$TREATMENT = rep(as.factor(treatment_annotation[i]), nrow(gsea_results))
all_gsea_results = rbind(all_gsea_results, gsea_results)
i=i+1
}
# remove "---" rows
all_gsea_results = all_gsea_results[all_gsea_results$NES!="---",]
# convert NES to double
all_gsea_results$NES = as.double(all_gsea_results$NES)
# convert FDR to -log10
all_gsea_results$`-10log(FDR q-val)` = -log(as.double(all_gsea_results$`FDR q-val`)+0.00001,10)
all_gsea_results$trFDR = all_gsea_results$`-10log(FDR q-val)`
# plot GSEA results in a dotplot facet by cell type and treatment
ggdotchart(all_gsea_results[(all_gsea_results$`FDR q-val`<=0.05) ,], 'GS PATHWAY', 'NES', shape=19,  sorting = "ascending",
add = "segments", color= 'NES',  rotate=TRUE, dot.size='trFDR',
ggtheme = theme_pubr()) + facet_grid(CELLTYPE~TREATMENT) +
scale_colour_gradientn(colours = dichromat::colorschemes$DarkRedtoBlue.12) +
geom_hline(yintercept = 0, linetype = 2, color = "lightgray") + ylim(-3,3) + font("xy.text", size=11)
wilcox_results = read_xlsx("/Volumes/Macintosh HD/Users/miltiado/Documents/BA/Anastasia/results/in-vitro_human_cell_lines_CD4_wilcox.xlsx")
# create annotation fields
celltype_annotation = rep(c("CD4", "CD4", "CD8", "CD8","Treg", "Treg"),4)
treatment_annotation= c(rep("CDCA",6),  rep("UDCA",6), rep("GW4064",6),  rep("DY268",6))
# initiate counter
i=1
# create empty tibble to store the GSEA data
all_gsea_results = tibble("GS PATHWAY"=factor(), "GS DETAILS"=integer(), "SIZE"=double(), "ES"=double(), "NES"=double(), "NOM p-val"=double(), "FDR q-val"=double(), "FWER p-val"=double(), "RANK"=integer(), "LEADING EDGE"=factor(), "CELLTYPE" = factor(), "TREATMENT" = factor())
# fill in tibble with all GSEA results
for (path in gsea_result_files){
gsea_results = tibble(read.table(path, sep="\t", row.names = 1, skip = 1))
colnames(gsea_results) = c("GS PATHWAY", "GS DETAILS", "SIZE", "ES", "NES", "NOM p-val", "FDR q-val", "FWER p-val", "RANK", "LEADING EDGE", "CELLTYPE", "TREATMENT")
gsea_results$CELLTYPE = rep(as.factor(celltype_annotation[i]), nrow(gsea_results))
gsea_results$TREATMENT = rep(as.factor(treatment_annotation[i]), nrow(gsea_results))
all_gsea_results = rbind(all_gsea_results, gsea_results)
i=i+1
}
# remove "---" rows
all_gsea_results = all_gsea_results[all_gsea_results$NES!="---",]
# convert NES to double
all_gsea_results$NES = as.double(all_gsea_results$NES)
# convert FDR to -log10
all_gsea_results$`-10log(FDR q-val)` = -log(as.double(all_gsea_results$`FDR q-val`)+0.00001,10)
# plot GSEA results in a dotplot facet by cell type and treatment
ggdotchart(all_gsea_results[(all_gsea_results$`FDR q-val`<=0.05) ,], 'GS PATHWAY', 'NES', shape=19,  sorting = "ascending",
add = "segments", color= 'NES',  rotate=TRUE, dot.size='-10log(FDR q-val)', ggtheme = theme_pubr()) + facet_grid(CELLTYPE~TREATMENT) +
scale_colour_gradientn(colours = dichromat::colorschemes$DarkRedtoBlue.12) +
geom_hline(yintercept = 0, linetype = 2, color = "lightgray") + ylim(-3,3) + font("xy.text", size=11)
# plot GSEA results in a dotplot facet by cell type and treatment
ggdotchart(all_gsea_results[(all_gsea_results$`FDR q-val`<=0.05) ,], 'GS PATHWAY', 'NES', shape=19,  sorting = "ascending",
add = "segments", color= 'NES',  rotate=TRUE, dot.size='-10log(FDR q-val)', ggtheme = theme_pubr()) + facet_grid(CELLTYPE~TREATMENT) +
scale_colour_gradientn(colours = dichromat::colorschemes$DarkRedtoBlue.12) +
geom_hline(yintercept = 0, linetype = 2, color = "lightgray") + ylim(-3,3) + font("xy.text", size=11)
# load required packages
library(biomaRt)
# load required packages
library(biomaRt)
library(edgeR)
library(tibble)
library(ggpubr)
library(pheatmap)
library(dichromat)
library(pheatmap)
library(dichromat)
library(grid)
library(dichromat)
library(grid)
library(patchwork)
library(pheatmap)
library(dichromat)
library(grid)
library(patchwork)
library(BiocManager)
library(stats)
library(readxl)
library(dplyr)
setwd("/Volumes/Macintosh HD/Users/miltiado/Documents/BA/Anastasia/gsea/")
# store gsea file paths
gsea_result_files <- list.files(recursive = TRUE, pattern = "^gsea_report(.*)tsv$")
# create annotation fields
celltype_annotation = rep(c("CD4", "CD4", "CD8", "CD8","Treg", "Treg"),4)
treatment_annotation= c(rep("CDCA",6),  rep("UDCA",6), rep("GW4064",6),  rep("DY268",6))
# initiate counter
i=1
# create empty tibble to store the GSEA data
all_gsea_results = tibble("GS PATHWAY"=factor(), "GS DETAILS"=integer(), "SIZE"=double(), "ES"=double(), "NES"=double(), "NOM p-val"=double(), "FDR q-val"=double(), "FWER p-val"=double(), "RANK"=integer(), "LEADING EDGE"=factor(), "CELLTYPE" = factor(), "TREATMENT" = factor())
# fill in tibble with all GSEA results
for (path in gsea_result_files){
gsea_results = tibble(read.table(path, sep="\t", row.names = 1, skip = 1))
colnames(gsea_results) = c("GS PATHWAY", "GS DETAILS", "SIZE", "ES", "NES", "NOM p-val", "FDR q-val", "FWER p-val", "RANK", "LEADING EDGE", "CELLTYPE", "TREATMENT")
gsea_results$CELLTYPE = rep(as.factor(celltype_annotation[i]), nrow(gsea_results))
gsea_results$TREATMENT = rep(as.factor(treatment_annotation[i]), nrow(gsea_results))
all_gsea_results = rbind(all_gsea_results, gsea_results)
i=i+1
}
# remove "---" rows
all_gsea_results = all_gsea_results[all_gsea_results$NES!="---",]
DY268_UDCA <- DY268_UDCA %>%  mutate(annotation = case_when(DY268_UDCA$`5.DY268(1uM) Treg_p`<=0.05 & DY268_UDCA$`4.UDCA(100nM) Treg_p`<=0.05   ~ 'red',
DY268_UDCA$`5.DY268(1uM) Treg_p`<=0.05 & DY268_UDCA$`4.UDCA(100nM) Treg_p`>0.05 ~  'green3',
DY268_UDCA$`5.DY268(1uM) Treg_p`>0.05 & DY268_UDCA$`4.UDCA(100nM) Treg_p`<=0.05 ~ 'blue',
DY268_UDCA$`5.DY268(1uM) Treg_p`>0.05 & DY268_UDCA$`4.UDCA(100nM) Treg_p`>=0.05  ~ 'grey80'))
for (item in '4.UDCA(100nM) CD8') {
UDCA <- read_excel('in-vitro_human_cell_lines_CD8_wilcox.xlsx', sheet = item)
}
for (item in '5.DY268(1uM) CD8') {
DY268 <- read_excel('in-vitro_human_cell_lines_CD8_wilcox.xlsx', sheet = item)
}
for (item in '4.UDCA(100nM) CD8') {
UDCA <- read_excel('in-vitro_human_cell_lines_CD8_wilcox.xlsx', sheet = item)
}
wilcox_results = read_xlsx("/Volumes/Macintosh HD/Users/miltiado/Documents/BA/Anastasia/results/in-vitro_human_cell_lines_CD4_wilcox.xlsx")
# create annotation fields
celltype_annotation = rep(c("CD4", "CD4", "CD8", "CD8","Treg", "Treg"),4)
treatment_annotation= c(rep("CDCA",6),  rep("UDCA",6), rep("GW4064",6),  rep("DY268",6))
# initiate counter
i=1
# initiate counter
i=1
# create empty tibble to store the GSEA data
all_gsea_results = tibble("GS PATHWAY"=factor(), "GS DETAILS"=integer(), "SIZE"=double(), "ES"=double(), "NES"=double(), "NOM p-val"=double(), "FDR q-val"=double(), "FWER p-val"=double(), "RANK"=integer(), "LEADING EDGE"=factor(), "CELLTYPE" = factor(), "TREATMENT" = factor())
# fill in tibble with all GSEA results
for (path in gsea_result_files){
gsea_results = tibble(read.table(path, sep="\t", row.names = 1, skip = 1))
colnames(gsea_results) = c("GS PATHWAY", "GS DETAILS", "SIZE", "ES", "NES", "NOM p-val", "FDR q-val", "FWER p-val", "RANK", "LEADING EDGE", "CELLTYPE", "TREATMENT")
gsea_results$CELLTYPE = rep(as.factor(celltype_annotation[i]), nrow(gsea_results))
gsea_results$TREATMENT = rep(as.factor(treatment_annotation[i]), nrow(gsea_results))
all_gsea_results = rbind(all_gsea_results, gsea_results)
i=i+1
}
# remove "---" rows
all_gsea_results = all_gsea_results[all_gsea_results$NES!="---",]
# convert NES to double
all_gsea_results$NES = as.double(all_gsea_results$NES)
# convert FDR to -log10
all_gsea_results$`-10log(FDR q-val)` = -log(as.double(all_gsea_results$`FDR q-val`)+0.00001,10)
# plot GSEA results in a dotplot facet by cell type and treatment
ggdotchart(all_gsea_results[(all_gsea_results$`FDR q-val`<=0.05) ,], 'GS PATHWAY', 'NES', shape=19,  sorting = "ascending",
add = "segments", color= 'NES',  rotate=TRUE, dot.size='-10log(FDR q-val)', ggtheme = theme_pubr()) + facet_grid(CELLTYPE~TREATMENT) +
scale_colour_gradientn(colours = dichromat::colorschemes$DarkRedtoBlue.12) +
geom_hline(yintercept = 0, linetype = 2, color = "lightgray") + ylim(-3,3) + font("xy.text", size=11)
# convert FDR to -log10
all_gsea_results$trFDR = -log(as.double(all_gsea_results$`FDR q-val`)+0.00001,10)
# plot GSEA results in a dotplot facet by cell type and treatment
ggdotchart(all_gsea_results[(all_gsea_results$`FDR q-val`<=0.05) ,], 'GS PATHWAY', 'NES', shape=19,  sorting = "ascending",
add = "segments", color= 'NES',  rotate=TRUE, dot.size='-10log(FDR q-val)', ggtheme = theme_pubr()) + facet_grid(CELLTYPE~TREATMENT) +
scale_colour_gradientn(colours = dichromat::colorschemes$DarkRedtoBlue.12) +
geom_hline(yintercept = 0, linetype = 2, color = "lightgray") + ylim(-3,3) + font("xy.text", size=11)
# plot GSEA results in a dotplot facet by cell type and treatment
ggdotchart(all_gsea_results[(all_gsea_results$trFDR ,], 'GS PATHWAY', 'NES', shape=19,  sorting = "ascending",
# plot GSEA results in a dotplot facet by cell type and treatment
ggdotchart(all_gsea_results[(all_gsea_results$'trFDR' ,], 'GS PATHWAY', 'NES', shape=19,  sorting = "ascending",
all_gsea_results$trFDR = -log(as.double(all_gsea_results$`FDR q-val`)+0.00001,10)
# plot GSEA results in a dotplot facet by cell type and treatment
ggdotchart(all_gsea_results[(all_gsea_results$'trFDR' ,], 'GS PATHWAY', 'NES', shape=19,  sorting = "ascending",
i=1
# create empty tibble to store the GSEA data
all_gsea_results = tibble("GS PATHWAY"=factor(), "GS DETAILS"=integer(), "SIZE"=double(), "ES"=double(), "NES"=double(), "NOM p-val"=double(), "FDR q-val"=double(), "FWER p-val"=double(), "RANK"=integer(), "LEADING EDGE"=factor(), "CELLTYPE" = factor(), "TREATMENT" = factor())
# fill in tibble with all GSEA results
for (path in gsea_result_files){
gsea_results = tibble(read.table(path, sep="\t", row.names = 1, skip = 1))
colnames(gsea_results) = c("GS PATHWAY", "GS DETAILS", "SIZE", "ES", "NES", "NOM p-val", "FDR q-val", "FWER p-val", "RANK", "LEADING EDGE", "CELLTYPE", "TREATMENT")
gsea_results$CELLTYPE = rep(as.factor(celltype_annotation[i]), nrow(gsea_results))
gsea_results$TREATMENT = rep(as.factor(treatment_annotation[i]), nrow(gsea_results))
all_gsea_results = rbind(all_gsea_results, gsea_results)
i=i+1
}
# remove "---" rows
all_gsea_results = all_gsea_results[all_gsea_results$NES!="---",]
# convert NES to double
all_gsea_results$NES = as.double(all_gsea_results$NES)
# convert FDR to -log10
all_gsea_results$`-10log(FDR q-val)` = -log(as.double(all_gsea_results$`FDR q-val`)+0.00001,10)
all_gsea_results$trFDR = all_gsea_results$`-10log(FDR q-val)`
# plot GSEA results in a dotplot facet by cell type and treatment
ggdotchart(all_gsea_results[(all_gsea_results$`FDR q-val`<=0.05) ,], 'GS PATHWAY', 'NES', shape=19,  sorting = "ascending",
add = "segments", color= 'NES',  rotate=TRUE, dot.size='trFDR',
ggtheme = theme_pubr()) + facet_grid(CELLTYPE~TREATMENT) +
scale_colour_gradientn(colours = dichromat::colorschemes$DarkRedtoBlue.12) +
geom_hline(yintercept = 0, linetype = 2, color = "lightgray") + ylim(-3,3) + font("xy.text", size=11)
i=1
# create empty tibble to store the GSEA data
all_gsea_results = tibble("GS PATHWAY"=factor(), "GS DETAILS"=integer(), "SIZE"=double(), "ES"=double(), "NES"=double(), "NOM p-val"=double(), "FDR q-val"=double(), "FWER p-val"=double(), "RANK"=integer(), "LEADING EDGE"=factor(), "CELLTYPE" = factor(), "TREATMENT" = factor())
# fill in tibble with all GSEA results
for (path in gsea_result_files){
gsea_results = tibble(read.table(path, sep="\t", row.names = 1, skip = 1))
colnames(gsea_results) = c("GS PATHWAY", "GS DETAILS", "SIZE", "ES", "NES", "NOM p-val", "FDR q-val", "FWER p-val", "RANK", "LEADING EDGE", "CELLTYPE", "TREATMENT")
gsea_results$CELLTYPE = rep(as.factor(celltype_annotation[i]), nrow(gsea_results))
gsea_results$TREATMENT = rep(as.factor(treatment_annotation[i]), nrow(gsea_results))
all_gsea_results = rbind(all_gsea_results, gsea_results)
i=i+1
}
all_gsea_results = all_gsea_results[all_gsea_results$NES!="---",]
# convert NES to double
all_gsea_results$NES = as.double(all_gsea_results$NES)
# convert FDR to -log10
all_gsea_results$`-10log(FDR q-val)` = -log(as.double(all_gsea_results$`FDR q-val`)+0.00001,10)
# plot GSEA results in a dotplot facet by cell type and treatment
ggdotchart(all_gsea_results[(all_gsea_results$`FDR q-val`<=0.05) ,], 'GS PATHWAY', 'NES', shape=19,  sorting = "ascending",
add = "segments", color= 'NES',  rotate=TRUE, dot.size='-10log(FDR q-val)', ggtheme = theme_pubr()) + facet_grid(CELLTYPE~TREATMENT) +
scale_colour_gradientn(colours = dichromat::colorschemes$DarkRedtoBlue.12) +
geom_hline(yintercept = 0, linetype = 2, color = "lightgray") + ylim(-3,3) + font("xy.text", size=11)
all_gsea_results$`-10log(FDR q-val)` = -log(as.double(all_gsea_results$`FDR q-val`)+0.00001,10)
all_gsea_results$trFDR = all_gsea_results$`-10log(FDR q-val)`
# fill in tibble with all GSEA results
for (path in gsea_result_files){
gsea_results = tibble(read.table(path, sep="\t", row.names = 1, skip = 1))
colnames(gsea_results) = c("GS PATHWAY", "GS DETAILS", "SIZE", "ES", "NES", "NOM p-val", "FDR q-val", "FWER p-val", "RANK", "LEADING EDGE", "CELLTYPE", "TREATMENT")
gsea_results$CELLTYPE = rep(as.factor(celltype_annotation[i]), nrow(gsea_results))
gsea_results$TREATMENT = rep(as.factor(treatment_annotation[i]), nrow(gsea_results))
all_gsea_results = rbind(all_gsea_results, gsea_results)
i=i+1
}
all_gsea_results$`-10log(FDR q-val)` = -log(as.double(all_gsea_results$`FDR q-val`)+0.00001,10)
all_gsea_results$trFDR = all_gsea_results$`-10log(FDR q-val)`
# remove "---" rows
all_gsea_results = all_gsea_results[all_gsea_results$NES!="---",]
# convert NES to double
all_gsea_results$NES = as.double(all_gsea_results$NES)
# convert FDR to -log10
all_gsea_results$`-10log(FDR q-val)` = -log(as.double(all_gsea_results$`FDR q-val`)+0.00001,10)
all_gsea_results$trFDR = all_gsea_results$`-10log(FDR q-val)`
# plot GSEA results in a dotplot facet by cell type and treatment
ggdotchart(all_gsea_results[(all_gsea_results$`FDR q-val`<=0.05) ,], 'GS PATHWAY', 'NES', shape=19,  sorting = "ascending",
add = "segments", color= 'NES',  rotate=TRUE, dot.size='trFDR', ggtheme = theme_pubr()) + facet_grid(CELLTYPE~TREATMENT) +
scale_colour_gradientn(colours = dichromat::colorschemes$DarkRedtoBlue.12) +
geom_hline(yintercept = 0, linetype = 2, color = "lightgray") + ylim(-3,3) + font("xy.text", size=11)
# check enviroment status
#renv::status()
#renv::snapshot()
renv::restore()
