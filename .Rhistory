theme(axis.text.y = element_blank())+
theme(legend.position = "none") #only for plotting reasons
gi_gvhd_plot
samples_key<-shotgun_sample_list %>%
left_join(later_pools_final %>% select(sampleid, secondary_nonUDCA)) %>%
left_join(cohort_BAS) %>%
filter(later=="Y") %>%
arrange(desc(secondary_nonUDCA)) %>%
left_join(ursodiol) %>% filter(ursodiol2=="Y")
level_order <- samples_key$sampleid
samples_key<-shotgun_sample_list %>%
left_join(later_pools_final %>% select(sampleid, secondary_nonUDCA)) %>%
left_join(cohort_BAS) %>%
filter(later=="Y") %>%
arrange(desc(secondary_nonUDCA)) %>%
left_join(ursodiol) %>% filter(ursodiol2=="Y")
samples_key<-BSH_metalphlan %>% distinct(sampleid) %>%
left_join(later_pools_final %>% select(sampleid, secondary_nonUDCA)) %>%
left_join(cohort_BAS) %>%
filter(later=="Y") %>%
arrange(desc(secondary_nonUDCA)) %>%
left_join(ursodiol) %>% filter(ursodiol2=="Y")
level_order <- samples_key$sampleid
gi_gvhd_plot<-cohort_BAS %>%
filter(later=="Y") %>%
ggplot((aes(x = factor(sampleid, levels = level_order), y = 1, fill = GI_GVHD))) +
geom_raster(color = "black", size = 0.5) +
theme_classic()+ theme(axis.text.x=element_blank())+
xlab("")+
ylab("")+
scale_fill_manual(values=c("white", "dodgerblue4"))+
theme(axis.text.y = element_blank())+
theme(legend.position = "none") #only for plotting reasons
gi_gvhd_plot
sba_plot<-ggplot(samples_key, aes(x=factor(sampleid, level=level_order), y=log10(secondary_nonUDCA)))+
geom_point(size=3)+theme_classic()+
ylab("log(SBAs*)")+
theme(axis.text.x=element_blank())+
xlab("")
sba_plot
adiv_pre<-cohort_BAS %>%
filter(later=="Y") %>%
left_join(asv_alpha_all) %>%  #add a-diversity
inner_join(samples_key) %>%
arrange(desc(secondary_nonUDCA)) %>%
mutate(rank = 1:nrow(.))
adiv_plot<-ggplot(adiv_pre, aes(x = rank, y = simpson_reciprocal)) +
geom_point(size=3) +
geom_smooth(method = "loess") +
theme_classic() +
ylab("a-diversity") +
#xlab("sampleid") +
theme(axis.text.x = element_blank()) +
xlab("") +
scale_x_discrete(limits = adiv_pre$rank[order(-adiv_pre$rank)])
adiv_plot
bai_genes_clean$sampleid <-gsub("FMT_", "FMT.", bai_genes_clean$sampleid)
ba_genes_pre<-samples_key %>%
select(sampleid, GI_GVHD, secondary_nonUDCA) %>%
left_join(BSH_metalphlan %>%
select(sampleid, cpm, KOID)) %>%
rename(gene=KOID) %>%
mutate(gene=ifelse(gene=="K01442", "BSH", NA)) %>%
distinct() %>%
spread(key=gene, value=cpm, fill=0)
operon_genes_pre<-samples_key %>%
left_join(bai_genes_clean) %>%
select(sampleid, cpm, gene) %>%
distinct() %>%
spread(key=gene, value=cpm, fill=0)
pre_bai_plot<-ba_genes_pre %>%
left_join(operon_genes_pre) %>%
select(-GI_GVHD, -secondary_nonUDCA) %>%
gather("gene", "cpm", names(.)[2]:names(.)[ncol(.)])
bai_plot<-pre_bai_plot %>%
ggplot(aes(x=factor(sampleid, level=level_order), y=gene, fill=log10(cpm+0.05)))+
geom_tile()+
xlab("")+
scale_fill_gradient(low="white", high="red")+
theme(axis.text.x=element_blank())+
theme(legend.position = "none") #only for plotting reasons
bai_plot
bai_plot<-pre_bai_plot %>%
ggplot(aes(x=factor(sampleid, level=level_order), y=gene, fill=log10(cpm+0.05)))+
geom_tile()+
xlab("")+
ylab("bile acid genes")+
scale_fill_gradient(low="white", high="red")+
theme(axis.text.x=element_blank())+
theme(legend.position = "none") #only for plotting reasons
bai_plot
setDT(asv_annotation_blast_color_ag)
library(data.table)
setDT(asv_annotation_blast_color_ag)
sv_annotation_blast_color_ag<-read_csv("/Volumes/vandenbrinklab/Oriana/BAs_published_datasets/asv_annotation_blast_color_ag.csv")
asv_annotation_blast_color_ag<-read_csv("/Volumes/vandenbrinklab/Oriana/BAs_published_datasets/asv_annotation_blast_color_ag.csv")
setDT(asv_annotation_blast_color_ag)
asv_color_base_set = unique(asv_annotation_blast_color_ag[,.(color_label_group,color_base)])
color_base_set_asv_carT = asv_color_base_set$color_base
names(color_base_set_asv_carT) =asv_color_base_set$color_label_group;
gg = ggplot(asv_color_base_set, aes(color_label_group,y=1,fill=color_label_group)) + geom_tile()  +
scale_fill_manual(values = color_base_set_asv_carT) +
theme_classic() +
theme(axis.text.x = element_text(angle=60,hjust = 1)) +
theme(legend.position = "none")
#color_set_asv_carT maps each distinct taxonomic group to its corresponding color.
asv_color_set = unique(asv_annotation_blast_color_ag[,.(color,color_label_group_distinct,color_label_group,color_base)])
color_set_asv_carT = asv_color_set$color
names(color_set_asv_carT) =asv_color_set$color_label_group_distinct;
setDT(counts_data)
setDT(asv_annotation_blast_color_ag)
#color_set_asv_carT maps each distinct taxonomic group to its corresponding color.
asv_color_set = unique(asv_annotation_blast_color_ag[,.(color,color_label_group_distinct,color_label_group,color_base)])
color_set_asv_carT = asv_color_set$color
names(color_set_asv_carT) =asv_color_set$color_label_group_distinct;
setDT(counts_samples)
setDT(asv_annotation_blast_color_ag)
m = merge(counts_samples[,.(asv_key,sampleid,oligos_id,
count,count_relative,count_total)],
asv_annotation_blast_color_ag[,.(asv_key,color_label_group_distinct)]);
m = merge(counts_samples[,.(asv_key,sampleid,
count,count_relative,count_total)],
asv_annotation_blast_color_ag[,.(asv_key,color_label_group_distinct)]);
sample_composition <- m %>%
left_join(cohort_BAS %>% select(PID, sampleid)) %>%
left_join(cohort_BAS) %>%
filter(later=="Y")
#16s data
counts_samples <-read_csv("/Volumes/vandenbrinklab/Oriana/BAs_published_datasets/counts_samples.csv")
#color_set_asv_carT maps each distinct taxonomic group to its corresponding color.
asv_color_set = unique(asv_annotation_blast_color_ag[,.(color,color_label_group_distinct,color_label_group,color_base)])
color_set_asv_carT = asv_color_set$color
names(color_set_asv_carT) =asv_color_set$color_label_group_distinct;
setDT(counts_samples)
setDT(asv_annotation_blast_color_ag)
m = merge(counts_samples[,.(asv_key,sampleid,
count,count_relative,count_total)],
asv_annotation_blast_color_ag[,.(asv_key,color_label_group_distinct)]);
sample_composition <- m %>%
left_join(cohort_BAS %>% select(PID, sampleid)) %>%
left_join(cohort_BAS) %>%
filter(later=="Y")
m1<-sample_composition %>%
group_by(sampleid, color_label_group_distinct) %>%
inner_join(samples_key) %>%
mutate(sampleid = fct_reorder(sampleid, desc(secondary_nonUDCA)))
m1$color_label_group_distinct = factor(m1$color_label_group_distinct,levels = sort(unique(m1$color_label_group_distinct),decreasing = T));
gg_composition = ggplot(m1,
aes(x=factor(sampleid, levels=level_order),
y=count_relative,
fill=color_label_group_distinct) ) +
geom_bar(stat = "identity",position="fill",width = 1) +
theme_classic() +
theme(axis.text.x = element_blank(),
axis.text.y = element_blank(),
legend.position = "none") +
xlab("")+
scale_fill_manual(values = color_set_asv_carT);
print(gg_composition)
last<-plot_grid(gi_gvhd_plot, sba_plot, bai_plot, adiv_plot, gg_composition,
#labels = c("A", "B", "C", "D", "E"),
ncol = 1, nrow = 5,
align = "v",axis = 'l',
width = 40, height = 20,
rel_heights = c(1.8, 4 ,6, 6, 10))
library(cowplot)
last<-plot_grid(gi_gvhd_plot, sba_plot, bai_plot, adiv_plot, gg_composition,
#labels = c("A", "B", "C", "D", "E"),
ncol = 1, nrow = 5,
align = "v",axis = 'l',
width = 40, height = 20,
rel_heights = c(1.8, 4 ,6, 6, 10))
last
data_ba<- asv_alpha_all %>%
inner_join(bai_genes_clean %>% distinct(sampleid, bai_operon_sum)) %>%
left_join(cohort_BAS) %>%
filter(ursodiol=="Y")
data_ba %>%
ggplot(aes(x=log10(simpson_reciprocal), y=log10(bai_operon_sum+0.01)))+
geom_point(alpha=0.6)+
stat_cor(method="pearson")+
geom_smooth(method="lm")+
theme_classic()+
ylab("bai operon log10(cpm)")+
xlab("a-diversity")
#create dataset with asv
samples_asv<-cohort_BAS %>%
filter(later=="Y") %>%
select(sampleid) %>%
inner_join(counts_samples %>%
select(sampleid, asv_key, count, count_total)) %>%
inner_join(asv_annotation_blast_ag %>%
select(asv_key, kingdom, phylum, class, ordr, family, genus)) %>%
#group_by(mrn, sampleid, kingdom, phylum, class, ordr, family, genus, count) %>%
#summarise(cnt=sum(count)) %>%
mutate(relab=count/count_total) %>%
group_by(sampleid, genus)
#create dataset with asv
samples_asv<-cohort_BAS %>%
filter(later=="Y") %>%
select(sampleid) %>%
inner_join(counts_samples %>%
select(sampleid, asv_key, count, count_total)) %>%
inner_join(asv_annotation_blast_ag %>%
select(asv_key, kingdom, phylum, class, ordr, family, genus)) %>%
mutate(relab=count/count_total) %>%
group_by(sampleid, genus)
pathogens_pre<- samples_asv %>%
filter(genus=="Enterococcus"|genus=="Streptococcus"|phylum=="Proteobacteria") %>%
mutate(enterococcus=ifelse(genus=="Enterococcus", relab, 0)) %>%
mutate(streptococcus=ifelse(genus=="Streptococcus", relab, 0)) %>%
mutate(proteobacteria=ifelse(phylum=="Proteobacteria", relab, 0)) %>%
mutate(enterococcus_dom=ifelse(enterococcus>=0.3, "Y", "N")) %>%
mutate(streptococcus_dom=ifelse(streptococcus>=0.3, "Y", "N")) %>%
mutate(proteobacteria_dom=ifelse(proteobacteria>=0.3, "Y", "N")) %>%
mutate(any_dom=ifelse(enterococcus_dom=="Y"|streptococcus_dom=="Y"|proteobacteria_dom=="Y", "Y", "N")) %>%
group_by(sampleid) %>%
arrange(desc(any_dom)) %>% slice(1)
pathogens_pre %>% inner_join(asv_alpha_all) %>%
ggplot(aes(x=any_dom, y=simpson_reciprocal, color=any_dom))+
geom_boxplot(width=0.2, lwd=0.8, outlier.shape = NA) +
geom_jitter(width=0.3, alpha=0.3, size=2.5)+
ylab("log10(a-div)")+
xlab("domination")+
theme_classic()+
stat_compare_means(comparisons=list(c("Y", "N")),
method="wilcox.test",
correct=FALSE)+
scale_color_manual(values=c("turquoise4","darkviolet"))+
theme(legend.position="none")
pathogens_pre %>% inner_join(asv_alpha_all) %>%
ggplot(aes(x=any_dom, y=simpson_reciprocal, color=any_dom))+
geom_boxplot(width=0.2, lwd=0.8, outlier.shape = NA) +
geom_jitter(width=0.3, alpha=0.3, size=2.5)+
ylab("log10(a-div)")+
xlab("domination")+
theme_classic()+
stat_compare_means(comparisons=list(c("Y", "N")),
method="wilcox.test",
correct=FALSE)+
scale_color_manual(values=c("turquoise4","darkviolet"))+
theme(legend.position="none")
pathogens_pre %>% inner_join(bai_genes_clean %>% distinct(sampleid, bai_operon_sum)) %>%
ggplot(aes(x=any_dom, y=log10(bai_operon_sum+0.01),  color=any_dom))+
geom_boxplot(width=0.2, lwd=0.8, outlier.shape = NA) +
geom_jitter(width=0.3, alpha=0.3, size=2.5)+
ylab("log10(bai sum)")+
xlab("domination")+
theme_classic()+
stat_compare_means(comparisons=list(c("Y", "N")),
method="wilcox.test",
correct=FALSE)+
scale_color_manual(values=c("turquoise4","darkviolet"))+
theme(legend.position="none")
pathogens_pre %>% inner_join(bai_genes_clean %>% distinct(sampleid, bai_operon_sum)) %>%
ggplot(aes(x=any_dom, y=log10(bai_operon_sum+0.01),  color=any_dom))+
geom_boxplot(width=0.2, lwd=0.8, outlier.shape = NA) +
geom_jitter(width=0.3, alpha=0.3, size=2.5)+
ylab("log10(bai sum)")+
xlab("domination")+
theme_classic()+
stat_compare_means(comparisons=list(c("Y", "N")),
method="wilcox.test",
correct=FALSE)+
scale_color_manual(values=c("turquoise4","darkviolet"))+
theme(legend.position="none")
pathogens_pre %>% inner_join(later_pools_final) %>%
ggplot(aes(x=any_dom, y=log10(secondary_nonUDCA), color=any_dom))+
geom_boxplot(width=0.2, lwd=0.8, outlier.shape = NA) +
geom_jitter(width=0.3, alpha=0.3, size=2.5)+
ylab("log10(SBAs*)")+
xlab("domination")+
theme_classic()+
stat_compare_means(comparisons=list(c("Y", "N")),
method="wilcox.test",
correct=FALSE)+
scale_color_manual(values=c("turquoise4","darkviolet"))+
theme(legend.position="none")
pathogens_pre %>% inner_join(later_pools_final) %>%
ggplot(aes(x=any_dom, y=log10(secondary_nonUDCA), color=any_dom))+
geom_boxplot(width=0.2, lwd=0.8, outlier.shape = NA) +
geom_jitter(width=0.3, alpha=0.3, size=2.5)+
ylab("log10(SBAs*)")+
xlab("domination")+
theme_classic()+
stat_compare_means(comparisons=list(c("Y", "N")),
method="wilcox.test",
correct=FALSE)+
scale_color_manual(values=c("turquoise4","darkviolet"))+
theme(legend.position="none")
load("/Volumes/vandenbrinklab/Oriana/Study ideas/bile_acids/final_datasets/patients_urso_CIF2.rdata")
View(patients_urso_CIF)
test<-patients_urso_CIF %>% select(mrn, intensity, donor_match, graft, relapse, pod, gvhd, death, OS, last_contact, cod, ursodiol2, relapse_time, pod_time, gvhd_death, TRM_death)
write_csv(test, "/Volumes/vandenbrinklab/Oriana/BAs_published_datasets/patients_urso_CIF.csv")
#ursodiol cohort: double check that it's ok to share
patients_urso_CIF<- read_csv( "/Volumes/vandenbrinklab/Oriana/BAs_published_datasets/patients_urso_CIF.csv")
library(tidycmprsk)
library(ggsurvfit)
library(tidycmprsk)
library(gtsummary)
patients_urso_CIF2<-patients_urso_CIF %>%
mutate(GRM_mortality=ifelse(death==F & relapse==F & pod=="N", 0,
ifelse(relapse==T | pod =="Y" | (cod=="Disease Progression"|
cod=="Recurrence of primary disease"|
# cod=="Graft Failure"|
cod=="Malignant disease"|
cod=="Relapse"),2,
ifelse(cod=="GvHD"|cod=="GvHD/Infection"|(gvhd==T & death==T),1,3)))) %>%
mutate(GRM_mortality = ifelse(is.na(GRM_mortality),3,GRM_mortality)) %>%
mutate(GRM_mortality = factor(GRM_mortality,levels=c(0,1,2,3),labels=c("Censored",
"GRM",
"Relapse/PoD",
"Other"))) %>%
mutate(TRM_mortality=ifelse(death==F & relapse==F & pod=="N", 0,
ifelse(relapse==T | pod =="Y" | (cod=="Disease Progression"|
cod=="Recurrence of primary disease"|
# cod=="Graft Failure"|
cod=="Malignant disease"|
cod=="Relapse"),2,
1))) %>%
mutate(TRM_mortality = ifelse(is.na(TRM_mortality),1,TRM_mortality)) %>%
mutate(TRM_mortality = factor(TRM_mortality,levels=c(0,1,2),labels=c("Censored",
"TRM",
"Relapse/PoD")))
table(patients_urso_CIF$GRM_mortality)
View(patients_urso_CIF2)
table(patients_urso_CIF2$GRM_mortality)
patients_urso_CIF2<-patients_urso_CIF %>%
mutate(GRM_mortality=ifelse(death==F & relapse==F & pod=="N", 0,
ifelse(relapse==T | pod =="Y" | (cod=="Disease Progression"|
cod=="Recurrence of primary disease"|
# cod=="Graft Failure"|
cod=="Malignant disease"|
cod=="Relapse"),2,
ifelse(cod=="GvHD"|cod=="GvHD/Infection"|(gvhd==T & death==T),1,3)))) %>%
mutate(GRM_mortality = ifelse(is.na(GRM_mortality),3,GRM_mortality)) %>%
mutate(GRM_mortality = factor(GRM_mortality,levels=c(0,1,2,3),labels=c("Censored",
"GRM",
"Relapse/PoD",
"Other"))) %>%
mutate(TRM_mortality=ifelse(death==F & relapse==F & pod=="N", 0,
ifelse(relapse==T | pod =="Y" | (cod=="Disease Progression"|
cod=="Recurrence of primary disease"|
# cod=="Graft Failure"|
cod=="Malignant disease"|
cod=="Relapse"),2,
1))) %>%
mutate(TRM_mortality = ifelse(is.na(TRM_mortality),1,TRM_mortality)) %>%
mutate(TRM_mortality = factor(TRM_mortality,levels=c(0,1,2),labels=c("Censored",
"TRM",
"Relapse/PoD")))
patients_urso_CIF2<-patients_urso_CIF %>%
mutate(GRM_mortality=ifelse(death==F & relapse==F & pod=="N", 0,
ifelse(relapse==T | pod =="Y" | (cod=="Disease Progression"|
cod=="Recurrence of primary disease"|
# cod=="Graft Failure"|
cod=="Malignant disease"|
cod=="Relapse"),2,
ifelse(cod=="GvHD"|cod=="GvHD/Infection"|(gvhd==T & death==T),1,3)))) %>%
mutate(GRM_mortality = ifelse(is.na(GRM_mortality),3,GRM_mortality)) %>%
mutate(GRM_mortality = factor(GRM_mortality,levels=c(0,1,2,3),labels=c("Censored",
"GRM",
"Relapse/PoD",
"Other"))) %>%
mutate(TRM_mortality=ifelse(death==F & relapse==F & pod=="N", 0,
ifelse(relapse==T | pod =="Y" | (cod=="Disease Progression"|
cod=="Recurrence of primary disease"|
# cod=="Graft Failure"|
cod=="Malignant disease"|
cod=="Relapse"),2,
1))) %>%
mutate(TRM_mortality = ifelse(is.na(TRM_mortality),1,TRM_mortality)) %>%
mutate(TRM_mortality = factor(TRM_mortality,levels=c(0,1,2),labels=c("Censored",
"TRM",
"Relapse/PoD")))
table(patients_urso_CIF2$GRM_mortality)
table(patients_urso_CIF2$GRM_mortality)
table(patients_urso_CIF$TRM_mortality)
patients_urso_CIF2$GRM_time[patients_urso_CIF2$relapse==T & patients_urso_CIF2$pod=="N"] = patients_urso_CIF2$relapse_time[patients_urso_CIF2$relapse==T & patients_urso_CIF2$pod=="N"]
patients_urso_CIF2$GRM_time[patients_urso_CIF2$relapse==F & patients_urso_CIF2$pod=="Y"] = patients_urso_CIF2$pod_time[patients_urso_CIF2$relapse==F & patients_urso_CIF2$pod=="Y"]
patients_urso_CIF2$GRM_time[patients_urso_CIF2$relapse==T & patients_urso_CIF2$pod=="Y"] = min(patients_urso_CIF2$pod_time[patients_urso_CIF2$relapse==T & patients_urso_CIF2$pod=="Y"],
patients_urso_CIF2$relapse_time[patients_urso_CIF2$relapse==T & patients_urso_CIF2$pod=="Y"])
patients_urso_CIF2$TRM_time <- patients_urso_CIF2$OS
patients_urso_CIF2$TRM_time[patients_urso_CIF2$relapse==T & patients_urso_CIF2$pod=="N"] = patients_urso_CIF2$relapse_time[patients_urso_CIF2$relapse==T & patients_urso_CIF2$pod=="N"]
patients_urso_CIF2$TRM_time[patients_urso_CIF2$relapse==F & patients_urso_CIF2$pod=="Y"] = patients_urso_CIF2$pod_time[patients_urso_CIF2$relapse==F & patients_urso_CIF2$pod=="Y"]
patients_urso_CIF2$TRM_time[patients_urso_CIF2$relapse==T & patients_urso_CIF2$pod=="Y"] = min(patients_urso_CIF2$pod_time[patients_urso_CIF2$relapse==T & patients_urso_CIF2$pod=="Y"],
patients_urso_CIF2$relapse_time[patients_urso_CIF2$relapse==T & patients_urso_CIF2$pod=="Y"])
patients_urso_CIF2 <- patients_urso_CIF2 %>% mutate(GRM_mortality_2yr = ifelse(GRM_time > 24,1,GRM_mortality),
GRM_time_2yr = ifelse(GRM_time > 24,24,GRM_time),
TRM_mortality_2yr = ifelse(TRM_time > 24,1,TRM_mortality),
TRM_time_2yr = ifelse(TRM_time > 24,24,TRM_time),
death_2yr = ifelse(OS > 24,FALSE,death),
OS_2yr = ifelse(OS > 24,24,OS),
GRM_mortality_2yr = factor(GRM_mortality_2yr,levels=1:4,labels=c("Censored",
"GRM",
"Relapse/PoD",
"Other")),
TRM_mortality_2yr = factor(TRM_mortality_2yr,levels=1:3,labels=c("Censored",
"TRM",
"Relapse/PoD")))
# patients_urso_CIF2 <- patients_urso_CIF2 %>% filter(graft != "CD34") %>% filter(donor_match != "MMRD")
patients_urso_CIF2 <- patients_urso_CIF2 %>% mutate(donor_new=ifelse(donor_match=="MMRD", "haplo", donor_match))
# patients_urso_CIF2 <- patients_urso_CIF2 %>% filter(graft != "CD34") %>% filter(donor_match != "MMRD")
patients_urso_CIF2 <- patients_urso_CIF2 %>% mutate(donor_new=ifelse(donor_match=="MMRD", "haplo", donor_match))
KM.OS %>% ggsurvfit() +
add_censor_mark() +
add_confidence_interval() +
add_risktable(times=c(0,12))
KM.OS <- survfit2(Surv(OS_2yr,as.numeric(death_2yr))~ursodiol2,data=patients_urso_CIF)
urvfit2(Surv(OS_2yr,as.numeric(death_2yr))~ursodiol2,data=patients_urso_CIF)
survfit2(Surv(OS_2yr,as.numeric(death_2yr))~ursodiol2,data=patients_urso_CIF)
patients_urso_CIF2<-patients_urso_CIF %>%
mutate(GRM_mortality=ifelse(death==F & relapse==F & pod=="N", 0,
ifelse(relapse==T | pod =="Y" | (cod=="Disease Progression"|cod=="Recurrence of primary disease"|cod=="Malignant disease"|cod=="Relapse"),2,                                  ifelse(cod=="GvHD"|cod=="GvHD/Infection"|(gvhd==T & death==T),1,3)))) %>%
mutate(GRM_mortality = ifelse(is.na(GRM_mortality),3,GRM_mortality)) %>%
mutate(GRM_mortality = factor(GRM_mortality,levels=c(0,1,2,3),labels=c("Censored", "GRM", "Relapse/PoD","Other"))) %>%
mutate(TRM_mortality=ifelse(death==F & relapse==F & pod=="N", 0,
ifelse(relapse==T | pod =="Y" | (cod=="Disease Progression"|cod=="Recurrence of primary disease"|cod=="Malignant disease"|cod=="Relapse"),2, 1))) %>%
mutate(TRM_mortality = ifelse(is.na(TRM_mortality),1,TRM_mortality)) %>%
mutate(TRM_mortality = factor(TRM_mortality,levels=c(0,1,2),labels=c("Censored","TRM","Relapse/PoD")))
table(patients_urso_CIF$GRM_mortality)
table(patients_urso_CIF2$GRM_mortality)
patients_urso_CIF2 <- patients_urso_CIF2 %>% mutate(GRM_mortality_2yr = ifelse(GRM_time > 24,1,GRM_mortality), GRM_time_2yr = ifelse(GRM_time > 24,24,GRM_time), TRM_mortality_2yr = ifelse(TRM_time > 24,1,TRM_mortality), TRM_time_2yr = ifelse(TRM_time > 24,24,TRM_time), death_2yr = ifelse(OS > 24,FALSE,death), OS_2yr = ifelse(OS > 24,24,OS),GRM_mortality_2yr = factor(GRM_mortality_2yr,levels=1:4,labels=c("Censored","GRM","Relapse/PoD",  "Other")),
TRM_mortality_2yr = factor(TRM_mortality_2yr,levels=1:3,labels=c("Censored",  "TRM", "Relapse/PoD")))
patients_urso_CIF2$GRM_time <- patients_urso_CIF2$OS
patients_urso_CIF2$GRM_time[patients_urso_CIF2$relapse==T & patients_urso_CIF2$pod=="N"] = patients_urso_CIF2$relapse_time[patients_urso_CIF2$relapse==T & patients_urso_CIF2$pod=="N"]
patients_urso_CIF2$GRM_time[patients_urso_CIF2$relapse==F & patients_urso_CIF2$pod=="Y"] = patients_urso_CIF2$pod_time[patients_urso_CIF2$relapse==F & patients_urso_CIF2$pod=="Y"]
patients_urso_CIF2$GRM_time[patients_urso_CIF2$relapse==T & patients_urso_CIF2$pod=="Y"] = min(patients_urso_CIF2$pod_time[patients_urso_CIF2$relapse==T & patients_urso_CIF2$pod=="Y"],
patients_urso_CIF2$relapse_time[patients_urso_CIF2$relapse==T & patients_urso_CIF2$pod=="Y"])
patients_urso_CIF2$TRM_time <- patients_urso_CIF2$OS
patients_urso_CIF2$TRM_time[patients_urso_CIF2$relapse==T & patients_urso_CIF2$pod=="N"] = patients_urso_CIF2$relapse_time[patients_urso_CIF2$relapse==T & patients_urso_CIF2$pod=="N"]
patients_urso_CIF2$TRM_time[patients_urso_CIF2$relapse==F & patients_urso_CIF2$pod=="Y"] = patients_urso_CIF2$pod_time[patients_urso_CIF2$relapse==F & patients_urso_CIF2$pod=="Y"]
patients_urso_CIF2$TRM_time[patients_urso_CIF2$relapse==T & patients_urso_CIF2$pod=="Y"] = min(patients_urso_CIF2$pod_time[patients_urso_CIF2$relapse==T & patients_urso_CIF2$pod=="Y"],
patients_urso_CIF2$relapse_time[patients_urso_CIF2$relapse==T & patients_urso_CIF2$pod=="Y"])
patients_urso_CIF2 <- patients_urso_CIF2 %>% mutate(GRM_mortality_2yr = ifelse(GRM_time > 24,1,GRM_mortality), GRM_time_2yr = ifelse(GRM_time > 24,24,GRM_time), TRM_mortality_2yr = ifelse(TRM_time > 24,1,TRM_mortality), TRM_time_2yr = ifelse(TRM_time > 24,24,TRM_time), death_2yr = ifelse(OS > 24,FALSE,death), OS_2yr = ifelse(OS > 24,24,OS),GRM_mortality_2yr = factor(GRM_mortality_2yr,levels=1:4,labels=c("Censored","GRM","Relapse/PoD",  "Other")),
TRM_mortality_2yr = factor(TRM_mortality_2yr,levels=1:3,labels=c("Censored",  "TRM", "Relapse/PoD")))
# patients_urso_CIF2 <- patients_urso_CIF2 %>% filter(graft != "CD34") %>% filter(donor_match != "MMRD")
patients_urso_CIF2 <- patients_urso_CIF2 %>% mutate(donor_new=ifelse(donor_match=="MMRD", "haplo", donor_match))
KM.OS <- survfit2(Surv(OS_2yr,as.numeric(death_2yr))~ursodiol2,data=patients_urso_CIF2)
KM.OS %>% ggsurvfit() +
add_censor_mark() +
add_confidence_interval() +
add_risktable(times=c(0,12))
KM.OS %>% ggsurvfit() +
add_censor_mark() +
add_confidence_interval() +
add_risktable(times=c(0,6, 12, 18, 24))
coxfit <- survival::coxph(Surv(OS_2yr,as.numeric(death_2yr))~age+sex+donor_match+graft+intensity+ursodiol2,data=patients_urso_CIF2)
#ursodiol cohort: double check that it's ok to share
patients_urso_CIF<- read_csv( "/Volumes/vandenbrinklab/Oriana/BAs_published_datasets/patients_urso_CIF.csv")
patients_urso_CIF2<-patients_urso_CIF %>%
mutate(GRM_mortality=ifelse(death==F & relapse==F & pod=="N", 0,
ifelse(relapse==T | pod =="Y" | (cod=="Disease Progression"|cod=="Recurrence of primary disease"|cod=="Malignant disease"|cod=="Relapse"),2,                                  ifelse(cod=="GvHD"|cod=="GvHD/Infection"|(gvhd==T & death==T),1,3)))) %>%
mutate(GRM_mortality = ifelse(is.na(GRM_mortality),3,GRM_mortality)) %>%
mutate(GRM_mortality = factor(GRM_mortality,levels=c(0,1,2,3),labels=c("Censored", "GRM", "Relapse/PoD","Other"))) %>%
mutate(TRM_mortality=ifelse(death==F & relapse==F & pod=="N", 0,
ifelse(relapse==T | pod =="Y" | (cod=="Disease Progression"|cod=="Recurrence of primary disease"|cod=="Malignant disease"|cod=="Relapse"),2, 1))) %>%
mutate(TRM_mortality = ifelse(is.na(TRM_mortality),1,TRM_mortality)) %>%
mutate(TRM_mortality = factor(TRM_mortality,levels=c(0,1,2),labels=c("Censored","TRM","Relapse/PoD")))
patients_urso_CIF2$GRM_time <- patients_urso_CIF2$OS
patients_urso_CIF2$GRM_time[patients_urso_CIF2$relapse==T & patients_urso_CIF2$pod=="N"] = patients_urso_CIF2$relapse_time[patients_urso_CIF2$relapse==T & patients_urso_CIF2$pod=="N"]
patients_urso_CIF2$GRM_time[patients_urso_CIF2$relapse==F & patients_urso_CIF2$pod=="Y"] = patients_urso_CIF2$pod_time[patients_urso_CIF2$relapse==F & patients_urso_CIF2$pod=="Y"]
patients_urso_CIF2$GRM_time[patients_urso_CIF2$relapse==T & patients_urso_CIF2$pod=="Y"] = min(patients_urso_CIF2$pod_time[patients_urso_CIF2$relapse==T & patients_urso_CIF2$pod=="Y"],
patients_urso_CIF2$relapse_time[patients_urso_CIF2$relapse==T & patients_urso_CIF2$pod=="Y"])
patients_urso_CIF2$TRM_time <- patients_urso_CIF2$OS
patients_urso_CIF2$TRM_time[patients_urso_CIF2$relapse==T & patients_urso_CIF2$pod=="N"] = patients_urso_CIF2$relapse_time[patients_urso_CIF2$relapse==T & patients_urso_CIF2$pod=="N"]
patients_urso_CIF2$TRM_time[patients_urso_CIF2$relapse==F & patients_urso_CIF2$pod=="Y"] = patients_urso_CIF2$pod_time[patients_urso_CIF2$relapse==F & patients_urso_CIF2$pod=="Y"]
patients_urso_CIF2$TRM_time[patients_urso_CIF2$relapse==T & patients_urso_CIF2$pod=="Y"] = min(patients_urso_CIF2$pod_time[patients_urso_CIF2$relapse==T & patients_urso_CIF2$pod=="Y"],
patients_urso_CIF2$relapse_time[patients_urso_CIF2$relapse==T & patients_urso_CIF2$pod=="Y"])
patients_urso_CIF2 <- patients_urso_CIF2 %>%
mutate(GRM_mortality_2yr = ifelse(GRM_time > 24,1,GRM_mortality),
GRM_time_2yr = ifelse(GRM_time > 24,24,GRM_time),
TRM_mortality_2yr = ifelse(TRM_time > 24,1,TRM_mortality),
TRM_time_2yr = ifelse(TRM_time > 24,24,TRM_time),
death_2yr = ifelse(OS > 24,FALSE,death),
OS_2yr = ifelse(OS > 24,24,OS),
GRM_mortality_2yr = factor(GRM_mortality_2yr,levels=1:4,labels=c("Censored","GRM","Relapse/PoD",  "Other")),
TRM_mortality_2yr = factor(TRM_mortality_2yr,levels=1:3,labels=c("Censored",  "TRM", "Relapse/PoD")))
coxfit <- survival::coxph(Surv(OS_2yr,as.numeric(death_2yr))~age+sex+donor_match+graft+intensity+ursodiol2,data=patients_urso_CIF2)
coxfit %>% tbl_regression(exponentiate=TRUE) %>% bold_p()
gray.test.GRM <- cuminc(Surv(GRM_time_2yr, GRM_mortality_2yr)~ursodiol2, data=patients_urso_CIF)
patients_urso_CIF2 <- patients_urso_CIF2 %>%
mutate(GRM_mortality_2yr = ifelse(GRM_time > 24,1,GRM_mortality),
GRM_time_2yr = ifelse(GRM_time > 24,24,GRM_time),
TRM_mortality_2yr = ifelse(TRM_time > 24,1,TRM_mortality),
TRM_time_2yr = ifelse(TRM_time > 24,24,TRM_time),
death_2yr = ifelse(OS > 24,FALSE,death),
OS_2yr = ifelse(OS > 24,24,OS),
GRM_mortality_2yr = factor(GRM_mortality_2yr,levels=1:4,labels=c("Censored","GRM","Relapse/PoD",  "Other")),
TRM_mortality_2yr = factor(TRM_mortality_2yr,levels=1:3,labels=c("Censored",  "TRM", "Relapse/PoD")))
patients_urso_CIF2 <- patients_urso_CIF2 %>% mutate(donor_new=ifelse(donor_match=="MMRD", "haplo", donor_match))
gray.test.GRM <- cuminc(Surv(GRM_time_2yr, GRM_mortality_2yr)~ursodiol2, data=patients_urso_CIF)
gray.test.GRM <- cuminc(Surv(GRM_time_2yr, GRM_mortality_2yr)~ursodiol2, data=patients_urso_CIF2)
gray.test.GRM <- cuminc(Surv(GRM_time_2yr, GRM_mortality_2yr)~ursodiol2, data=patients_urso_CIF2)
gray.test.GRM %>% tbl_cuminc(times= c(6,12,18,24),outcome="GRM") %>%
add_p() %>%
add_n() %>%
modify_caption("Outcome: GRM")
gray.test.GRM %>% ggcuminc(outcome="GRM") +
labs(
x = "Months after HCT",
y = "Cumulative Incidence (GRM)"
) +
add_confidence_interval() +
add_risktable(times=c(0,6,12,18,24))
gray.test.GRM %>% tbl_cuminc(times= c(6,12,18,24),outcome="Other") %>%
add_p() %>%
add_n() %>%
modify_caption("Outcome: Other")
fgmodel.GRM <- crr(Surv(GRM_time_2yr,GRM_mortality_2yr)~age+sex+donor_match+graft+intensity+ursodiol2,data=patients_urso_CIF)
fgmodel.GRM <- crr(Surv(GRM_time_2yr,GRM_mortality_2yr)~age+sex+donor_match+graft+intensity+ursodiol2,data=patients_urso_CIF2)
fgmodel.GRM %>% tbl_regression(exponentiate=TRUE) %>% bold_p()
